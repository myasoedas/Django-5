# blog/admin.py
from django.contrib import admin

from .models import Post


# Регистрируем модель Post с кастомной конфигурацией через декоратор.
# @admin.register(Post) — это синтаксический сахар для admin.site.register(Post, PostAdmin),
# позволяет компактно привязать PostAdmin к Post.
@admin.register(Post)
class PostAdmin(admin.ModelAdmin):
    # Определяет, какие поля отображаются в списке объектов в админке.
    # Поле author автоматически выводит __str__ представление связанного пользователя.
    list_display = ("title", "author", "publish", "status")

    # Добавляет панель фильтрации справа. Значительно улучшает UX при большом
    # количестве записей. Поля должны поддерживать фильтрацию (например, быть ForeignKey или DateTime).
    list_filter = ("status", "created", "publish", "author")

    # Позволяет выполнять полнотекстовый поиск по указанным полям.
    # Django автоматически строит запросы __icontains.
    search_fields = ("title", "body")

    # Позволяет автозаполнять поле slug на основе введённого значения в title.
    # Это упрощает ручной ввод и предотвращает дублирование slug'ов.
    prepopulated_fields = {"slug": ("title",)}

    # Заменяет стандартный выпадающий список ForeignKey-поля author на
    # input с автодополнением. Требует настройки search_fields в модели User.
    # Предпочтительно при большом количестве пользователей.
    autocomplete_fields = ("author",)

    # Заменяет ForeignKey-поле на поле ввода ID (целочисленное поле).
    # Используется при большом количестве связанных записей для оптимизации рендеринга.
    # autocomplete_fields имеет приоритет, поэтому используется в паре.
    raw_id_fields = ("author",)

    # Добавляет временную иерархию по полю publish в виде ссылок (год, месяц, день)
    # над списком объектов. Удобно для блога, позволяет быстро фильтровать посты по датам.
    date_hierarchy = "publish"

    # Сортировка по умолчанию в списке объектов — по убыванию publish.
    # Префикс "-" означает обратный порядок (от новых к старым).
    ordering = ("-publish",)
